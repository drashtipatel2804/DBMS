create table user
(
id int primary key,
name char(20) ,
age int 
);

insert into user values (1,'ram',18);
insert into user values (2,'radha',18);
insert into user values (3,'rocky',18);
insert into user values (4,'hash',18);
insert into user values (5,'d2',18);

create table user_log
(
uid int primary key,
uname char(20) ,
uage int 
);

drop trigger before_user_delete //
create trigger before_user_delete BEFORE DELETE ON user FOR EACH ROW
BEGIN
	insert into user_log (uid , uname , uage) values (old.id , old.name , old.age);
END;


delete from user where id=1;

select *from user //
+----+-------+------+
| id | name  | age  |
+----+-------+------+
|  2 | radha |   18 |
|  3 | rocky |   18 |
|  4 | hash  |   18 |
|  5 | d2    |   18 |
+----+-------+------+

select *from user_log //
+-----+-------+------+
| uid | uname | uage |
+-----+-------+------+
|   1 | ram   |   18 |
+-----+-------+------+

drop table new_user_id
create table new_user_id
(
nid int not null primary key  auto_increment ,
new_ids int,
name varchar(20)
);

drop trigger after_user_insert //
create trigger after_user_insert after insert on user for each row 
begin
insert into new_user_id(new_ids , name) values (new.id , new.name);
end;

select *from user //
 select *from user //
+----+-------+------+
| id | name  | age  |
+----+-------+------+
|  2 | radha |   18 |
|  3 | rocky |   18 |
|  4 | hash  |   18 |
|  5 | d2    |   18 |
+----+-------+------+


 insert into user values(6,'rr',33) //
Query OK, 1 row affected (0.06 sec)


select *from user //
+----+-------+------+
| id | name  | age  |
+----+-------+------+
|  2 | radha |   18 |
|  3 | rocky |   18 |
|  4 | hash  |   18 |
|  5 | d2    |   18 |
|  6 | rr    |   33 |
+----+-------+------+


mysql> select *from new_user_id //

+-----+---------+------+
| nid | new_ids | name |
+-----+---------+------+
|   1 |       6 | rr   |
+-----+---------+------+




create table emp 
(
name varchar(20) not null,
occupation varchar(30) ,
join_date date,
hours int 
);

drop trigger before_insert_emp //
create trigger before_insert_emp before insert on emp for each row
begin
	if new.hours < 0 then set new.hours=0;
	end if;
end;
 

insert into emp values ('ram' , 'rr' , '2000-02-02' , -16) //
insert into emp values ('radhi' , 'rocky' , '2000-02-02' , 16) //
insert into emp values ('d2' , 'rr' , '2000-02-02' , 20) //
insert into emp values ('harsh' , 'rr' , '2000-02-02' , 25) //


select *from emp //
+-------+------------+------------+-------+
| name  | occupation | join_date  | hours |
+-------+------------+------------+-------+
| ram   | rr         | 2000-02-02 |     0 |
| radhi | rocky      | 2000-02-02 |    16 |
| d2    | rr         | 2000-02-02 |    20 |
| harsh | rr         | 2000-02-02 |    25 |
+-------+------------+------------+-------+

